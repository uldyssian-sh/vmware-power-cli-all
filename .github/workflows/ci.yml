name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'

jobs:
  powershell-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        powershell-version: ['5.1', '7.x']
        exclude:
          - os: ubuntu-latest
            powershell-version: '5.1'
          - os: macos-latest
            powershell-version: '5.1'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PowerShell
      if: matrix.powershell-version == '7.x'
      uses: actions/setup-powershell@v1
      with:
        powershell-version: ${{ matrix.powershell-version }}
    
    - name: Run PSScriptAnalyzer
      shell: pwsh
      run: |
        Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser
        $results = Invoke-ScriptAnalyzer -Path . -Recurse -ReportSummary
        if ($results) {
          $results | Format-Table
          exit 1
        }
    
    - name: Run Pester Tests
      shell: pwsh
      run: |
        Install-Module -Name Pester -Force -Scope CurrentUser -SkipPublisherCheck
        Import-Module Pester
        $config = New-PesterConfiguration
        $config.Run.Path = './tests'
        $config.TestResult.Enabled = $true
        $config.TestResult.OutputPath = 'test-results.xml'
        $config.CodeCoverage.Enabled = $true
        Invoke-Pester -Configuration $config
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.powershell-version }}
        path: test-results.xml

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  documentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        npm install -g markdownlint-cli
        npm install -g markdown-link-check
    
    - name: Lint Markdown
      run: markdownlint docs/ README.md
    
    - name: Check Markdown links
      run: markdown-link-check README.md docs/**/*.md

  release:
    needs: [powershell-test, security-scan, documentation]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}